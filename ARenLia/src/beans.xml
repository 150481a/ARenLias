<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
    <!-- <context:annotation-config />  -->
    <!-- 自动匹配包下所有的  -->
    <context:component-scan base-package="com.oaec.ssh" />
    <!-- 给不使用模板的Hibernate DAO添加异常转换功能 -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <!-- DataSource 数据库链接 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />  
        <property name="jdbcUrl"   
            value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" />  
        <property name="user" value="xsj" />  
        <property name="password" value="123456" />  
    </bean>  
    <!-- 获取 sessionFactory，-->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <!--不能弄com.iotek.domain.*,必须一项一项的写-->
                <value>com.oaec.ssh.domain.Educate</value>
                <value>com.oaec.ssh.domain.Institution</value>
                <value>com.oaec.ssh.domain.Job</value>
                <value>com.oaec.ssh.domain.Message</value>
                <value>com.oaec.ssh.domain.Users</value>
                 <value>com.oaec.ssh.domain.Stipend</value>
                <value>com.oaec.ssh.domain.XForeign</value>
            </list>
        </property>
        <!-- 配置hibernate -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.OracleDialect
                </prop>
                <prop key="hibernate.current_session_context_class">
           			org.springframework.orm.hibernate4.SpringSessionContext                
        		</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="xmManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- 支持注解<tx:annotation-driven/> 就是支持事务注解的（@Transactional） 、<mvc:annotation-driven> 就是支持mvc注解的 -->
    <tx:annotation-driven transaction-manager="xmManager" />
    <tx:advice id="xaAdvice" transaction-manager="xmManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="exists" propagation="REQUIRED" />
            <tx:method name="paging" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="Message_*" propagation="REQUIRED"/>
            <tx:method name="joblist_*" propagation="REQUIRED" />
            <tx:method name="educatelist_*" propagation="REQUIRED"/>
            <tx:method name="stipend_*" propagation="REQUIRED"/>
            <tx:method name="renyuanzj_*" propagation="REQUIRED"/>
            <tx:method name="institutionlist_*" propagation="REQUIRED"/>
            <tx:method name="register" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <!--<tx:advice>只是定义了AOP通知，用于把事务边界通知给方法，还需要一个切入点声明哪些Bean应该被通知。
                   为了完整定义事务性切面，需要定义一个通知器（advisor）
      -->
    <aop:config>
        <aop:pointcut expression="execution(public * com.oaec.ssh.service.impl.*.*(..))"
            id="pc" />
        <aop:advisor advice-ref="xaAdvice" pointcut-ref="pc" />
    </aop:config>
</beans>